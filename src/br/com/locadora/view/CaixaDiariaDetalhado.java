/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * EntradaGUI.java
 *
 * Created on 27/05/2011, 15:13:50
 */
package br.com.locadora.view;

import br.com.locadora.conexao.InterfacePool;
import br.com.locadora.conexao.Pool;
import br.com.locadora.controller.SiscomController;
import br.com.locadora.model.bean.Lancamento;
import br.com.locadora.model.dao.LancamentoDAO;
import br.com.locadora.util.Moeda;
import br.com.locadora.util.TemaInterface;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class CaixaDiariaDetalhado extends javax.swing.JFrame {

    public TelaPrincipal janelapai;
    public static List<Lancamento> lancamentos;
    public InterfacePool pool;
    public SiscomController controller;

    public CaixaDiariaDetalhado() {
        initComponents();
        TemaInterface.getInterface(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jb_sair = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtbl_lancamento_caixa = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Lançamento de Caixa");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jb_sair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/locadora/image/exit.png"))); // NOI18N
        jb_sair.setText("Sair");
        jb_sair.setName("jb_sair"); // NOI18N
        jb_sair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_sairActionPerformed(evt);
            }
        });
        getContentPane().add(jb_sair, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 340, 90, -1));

        jScrollPane3.setName("jScrollPane3"); // NOI18N

        jtbl_lancamento_caixa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Dependente", "Tipo Serviço", "Caixa", "Data Lançamento", "Valor", "Usuário"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtbl_lancamento_caixa.setName("jtbl_lancamento_caixa"); // NOI18N
        jtbl_lancamento_caixa.getTableHeader().setReorderingAllowed(false);
        jtbl_lancamento_caixa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtbl_lancamento_caixaMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jtbl_lancamento_caixa);
        if (jtbl_lancamento_caixa.getColumnModel().getColumnCount() > 0) {
            jtbl_lancamento_caixa.getColumnModel().getColumn(2).setPreferredWidth(20);
            jtbl_lancamento_caixa.getColumnModel().getColumn(3).setPreferredWidth(30);
            jtbl_lancamento_caixa.getColumnModel().getColumn(4).setPreferredWidth(50);
        }

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 760, 280));

        setSize(new java.awt.Dimension(800, 417));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jb_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_buscarActionPerformed
        buscarDados();
}//GEN-LAST:event_jb_buscarActionPerformed

    private void jb_sairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_sairActionPerformed
        setVisible(false);
        janelapai.setStatusTela(true);
}//GEN-LAST:event_jb_sairActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        setVisible(false);
        janelapai.setStatusTela(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosed

    private void jtbl_lancamento_caixaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbl_lancamento_caixaMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jtbl_lancamento_caixaMouseClicked

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

        lancamentoCaixa();
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new CaixaDiariaDetalhado().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton jb_sair;
    public static javax.swing.JTable jtbl_lancamento_caixa;
    // End of variables declaration//GEN-END:variables

    public void buscarDados() {
        controller = new SiscomController();
        controller.processarRequisicao("consultarCliente");
    }

    public void lancamentoCaixa() {
        pool = new Pool();
        LancamentoDAO lancDAO = new LancamentoDAO(pool);

        lancamentos = lancDAO.getLancamentoDetalhado();

        mostrarLancamentoCaixa(lancamentos);
    }

    public void mostrarLancamentoCaixa(List<Lancamento> lancamentos) {
        DefaultTableModel tableModel = (DefaultTableModel) jtbl_lancamento_caixa.getModel();
        tableModel.setNumRows(0);

        if (lancamentos.size() == 0) {
            JOptionPane.showMessageDialog(null, "Nenhuma lançamento encontrado");

        } else {
            for (int i = 0; i < lancamentos.size(); i++) {

                String valor = null;

                valor = String.valueOf(lancamentos.get(i).getValor());

                Moeda moeda = new Moeda();

                valor = moeda.setPrecoFormat(valor);

                SimpleDateFormat in = new SimpleDateFormat("yyyy-MM-dd");
                SimpleDateFormat out = new SimpleDateFormat("dd/MM/yyyy");

                String data_lancamento = null;
                try {
                    data_lancamento = out.format(in.parse(lancamentos.get(i).getData_lancamento().toString()));
                } catch (ParseException ex) {
                    Logger.getLogger(CaixaDiariaDetalhado.class.getName()).log(Level.SEVERE, null, ex);
                }

                DefaultTableModel row = (DefaultTableModel) jtbl_lancamento_caixa.getModel();
//                ItemDbGrid hashDbGrid = new ItemDbGrid(diaria, diaria.getNome_diaria());
                row.addRow(new Object[]{lancamentos.get(i).getDependente().getNome_dependente(), lancamentos.get(i).getTipoServico().getDescricao(),
                    lancamentos.get(i).getCaixa(), data_lancamento, valor, lancamentos.get(i).getUsuario().getNome_usuario()});
            }

        }
    }

    public void statusTela(boolean status) {
        if (status) {
            this.setVisible(status);
        }
        this.setEnabled(status);
    }

}
