package br.com.locadora.view;

import br.com.locadora.conexao.InterfacePool;
import br.com.locadora.conexao.Pool;
import br.com.locadora.controller.SiscomController;
import br.com.locadora.model.bean.Cliente;
import br.com.locadora.model.bean.Dependente;
import br.com.locadora.model.bean.Produto;
import br.com.locadora.model.bean.Telefone;
import br.com.locadora.model.dao.ClienteDAO;
import br.com.locadora.model.dao.DependenteDAO;
import br.com.locadora.model.dao.TelefoneDAO;
import br.com.locadora.util.Data;
import br.com.locadora.util.ItemDbGrid;
import br.com.locadora.util.LimitadorTexto;
import br.com.locadora.util.ValidaCPF;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.InputVerifier;
import javax.swing.JComponent;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.MaskFormatter;

/**
 *
 * @author ALENCAR
 */
public final class AtualizaCliente extends javax.swing.JFrame {

    public MenuCliente janela1;
    private Cliente objetoCliente;
    public Produto produto = new Produto();
    public MenuCliente janelapai;
    private InterfacePool pool = new Pool();
    public List<Telefone> telefones;
    public List<Dependente> dependentes;
    public MaskFormatter formatoData, formatoCPF, formatoTelefone;
    public SiscomController controller;

    /**
     * Creates new form ProdutoCadastroGUI
     */
    public AtualizaCliente() {
        initComponents();
        janelapai = null;
    }

    public AtualizaCliente(Cliente cliente)  {
        if (cliente != null) {
            objetoCliente = new Cliente();
            this.objetoCliente = cliente;
            initComponents();

            jtf_codigo_cliente.setText(String.valueOf(objetoCliente.getCodigo_cliente()));
            jtf_nome_cliente.setText(objetoCliente.getNome_cliente());

            SimpleDateFormat in = new SimpleDateFormat("yyyy-MM-dd");
            SimpleDateFormat out = new SimpleDateFormat("dd/MM/yyyy");

            String data_nascimento = null;
            try {
                data_nascimento = out.format(in.parse(objetoCliente.getData_nascimento().toString()));
            } catch (ParseException ex) {
                Logger.getLogger(AtualizaCliente.class.getName()).log(Level.SEVERE, null, ex);
            }

            jtf_data_nascimento.setText(data_nascimento);
            jtf_cpf_cliente.setText(objetoCliente.getCpf());
            jtf_empresa.setText(objetoCliente.getNome_empresa_trabalho());
            jtf_profissao.setText(objetoCliente.getProfissao());
            jtf_endereco.setText(objetoCliente.getEndereco());
            jtf_bairro.setText(objetoCliente.getBairro());
            jtf_complemento.setText(objetoCliente.getComplemento());
            jtf_cidade.setText(objetoCliente.getCidade());
            jtf_estado.setText(objetoCliente.getEstado());
            jtf_email.setText(objetoCliente.getEmail());

            carregaTelefone(objetoCliente.getCodigo_cliente());
            carregaDependente(objetoCliente.getCodigo_cliente());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tfa_similar = new javax.swing.JTextArea();
        jb_cancelar = new javax.swing.JButton();
        jb_salvar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jtf_codigo_cliente = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jtf_empresa = new javax.swing.JTextField(new LimitadorTexto(45), "",10);
        jtf_nome_cliente = new javax.swing.JTextField(new LimitadorTexto(80), "",10);
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jtf_profissao = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jtf_endereco = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jtf_bairro = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jtf_complemento = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jtf_email = new javax.swing.JTextField();
        jrb_ativo = new javax.swing.JRadioButton();
        jrb_inativo = new javax.swing.JRadioButton();
        jLabel20 = new javax.swing.JLabel();
        jtf_estado = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        jtf_cidade = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jta_observacao = new javax.swing.JTextArea();
        try  {
            formatoData = new MaskFormatter("##/##/####");
        }
        catch (Exception erro)
        {
            JOptionPane.showMessageDialog(null,"Não foi possivel setar");
        }
        jtf_data_nascimento = new JFormattedTextField(formatoData);
        try  {
            formatoCPF = new MaskFormatter("###.###.###-##");
        }
        catch (Exception erro)
        {
            JOptionPane.showMessageDialog(null,"Não foi possivel setar");
        }
        jtf_cpf_cliente = new JFormattedTextField(formatoCPF);
        jLabel21 = new javax.swing.JLabel();
        jb_adicionar_telefone = new javax.swing.JButton();
        jb_eliminar = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jtbl_telefone = new javax.swing.JTable();
        try  {
            formatoTelefone = new MaskFormatter("(##) ####-####");
        }
        catch (Exception erro)
        {
            JOptionPane.showMessageDialog(null,"Não foi possivel setar");
        }
        jtf_telefone = new JFormattedTextField(formatoTelefone);
        jPanel2 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jtf_nome_dependente = new javax.swing.JTextField();
        try  {
            formatoData = new MaskFormatter("##/##/####");
        }
        catch (Exception erro)
        {
            JOptionPane.showMessageDialog(null,"Não foi possivel setar");
        }
        jtf_data_nascimento_dependente = new JFormattedTextField(formatoData);
        try  {
            formatoTelefone = new MaskFormatter("(##) ####-####");
        }
        catch (Exception erro)
        {
            JOptionPane.showMessageDialog(null,"Não foi possivel setar");
        }
        jtf_telefone_dependente = new JFormattedTextField(formatoTelefone);
        jcb_parentesco = new javax.swing.JComboBox();
        try  {
            formatoCPF = new MaskFormatter("###.###.###-##");
        }
        catch (Exception erro)
        {
            JOptionPane.showMessageDialog(null,"Não foi possivel setar");
        }
        jtf_cpf_dependente = new JFormattedTextField(formatoCPF);
        jb_adicionar_dependente = new javax.swing.JButton();
        jb_eliminar1 = new javax.swing.JButton();
        jrb_ativo_dependente = new javax.swing.JRadioButton();
        jrb_inativo_dependente = new javax.swing.JRadioButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        jtbl_dependente = new javax.swing.JTable();

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        tfa_similar.setColumns(20);
        tfa_similar.setRows(5);
        tfa_similar.setName("tfa_similar"); // NOI18N
        jScrollPane1.setViewportView(tfa_similar);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Atualizar Cliente");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jb_cancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/locadora/image/exit.png"))); // NOI18N
        jb_cancelar.setText("Cancelar");
        jb_cancelar.setMaximumSize(new java.awt.Dimension(101, 33));
        jb_cancelar.setName("jb_cancelar"); // NOI18N
        jb_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_cancelarActionPerformed(evt);
            }
        });
        getContentPane().add(jb_cancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 520, -1, 35));

        jb_salvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/locadora/image/gravar_registro.gif"))); // NOI18N
        jb_salvar.setText("Salvar");
        jb_salvar.setName("jb_salvar"); // NOI18N
        jb_salvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_salvarActionPerformed(evt);
            }
        });
        getContentPane().add(jb_salvar, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 520, -1, 35));

        jLabel2.setText("Observação: Os campos com asteristico na frente são obrigatórios ");
        jLabel2.setName("jLabel2"); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 570, -1, -1));

        jTabbedPane1.setName("jTabbedPane1"); // NOI18N
        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
        });

        jPanel3.setName("jPanel3"); // NOI18N
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jtf_codigo_cliente.setEditable(false);
        jtf_codigo_cliente.setName("jtf_codigo_cliente"); // NOI18N
        jPanel3.add(jtf_codigo_cliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 94, -1));

        jLabel6.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel6.setText("CPF");
        jLabel6.setName("jLabel6"); // NOI18N
        jPanel3.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 70, -1, -1));

        jtf_empresa.setName("jtf_empresa"); // NOI18N
        jtf_empresa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtf_empresaActionPerformed(evt);
            }
        });
        jtf_empresa.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtf_empresaFocusGained(evt);
            }
        });
        jtf_empresa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtf_empresaKeyPressed(evt);
            }
        });
        jPanel3.add(jtf_empresa, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, 280, -1));

        jtf_nome_cliente.setName("jtf_nome_cliente");
        jtf_nome_cliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtf_nome_clienteActionPerformed(evt);
            }
        });
        jtf_nome_cliente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtf_nome_clienteFocusGained(evt);
            }
        });
        jtf_nome_cliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtf_nome_clienteKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtf_nome_clienteKeyReleased(evt);
            }
        });
        jPanel3.add(jtf_nome_cliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 280, -1));

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel1.setText("Código Cliente");
        jLabel1.setName("jLabel1"); // NOI18N
        jPanel3.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel3.setText("Nome");
        jLabel3.setName("jLabel3"); // NOI18N
        jPanel3.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, -1, -1));

        jLabel10.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel10.setText("Empresa");
        jLabel10.setName("jLabel10"); // NOI18N
        jPanel3.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, -1, -1));

        jLabel11.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel11.setText("Profissão");
        jLabel11.setName("jLabel11"); // NOI18N
        jPanel3.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 120, -1, -1));

        jtf_profissao.setName("jtf_profissao"); // NOI18N
        jtf_profissao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtf_profissaoActionPerformed(evt);
            }
        });
        jtf_profissao.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtf_profissaoKeyPressed(evt);
            }
        });
        jPanel3.add(jtf_profissao, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 140, 230, -1));

        jLabel12.setText("Nascimento");
        jLabel12.setName("jLabel12"); // NOI18N
        jPanel3.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 70, -1, -1));

        jLabel13.setText("Endereço");
        jLabel13.setName("jLabel13"); // NOI18N
        jPanel3.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, -1, -1));

        jtf_endereco.setName("jtf_endereco"); // NOI18N
        jtf_endereco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtf_enderecoActionPerformed(evt);
            }
        });
        jtf_endereco.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtf_enderecoKeyPressed(evt);
            }
        });
        jPanel3.add(jtf_endereco, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, 220, -1));

        jLabel14.setText("Bairro");
        jLabel14.setName("jLabel14"); // NOI18N
        jPanel3.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 170, 60, -1));

        jtf_bairro.setName("jtf_bairro"); // NOI18N
        jtf_bairro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtf_bairroKeyPressed(evt);
            }
        });
        jPanel3.add(jtf_bairro, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 190, 180, -1));

        jLabel15.setText("Complemento");
        jLabel15.setName("jLabel15"); // NOI18N
        jPanel3.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 170, -1, -1));

        jtf_complemento.setName("jtf_complemento"); // NOI18N
        jtf_complemento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtf_complementoKeyPressed(evt);
            }
        });
        jPanel3.add(jtf_complemento, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 190, 110, -1));

        jLabel16.setText("Email");
        jLabel16.setName("jLabel16"); // NOI18N
        jPanel3.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 220, -1, -1));

        jtf_email.setName("jtf_email"); // NOI18N
        jtf_email.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtf_emailKeyPressed(evt);
            }
        });
        jPanel3.add(jtf_email, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 240, 270, -1));

        jrb_ativo.setSelected(true);
        jrb_ativo.setText("Ativo");
        jrb_ativo.setName("jrb_ativo"); // NOI18N
        jrb_ativo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrb_ativoActionPerformed(evt);
            }
        });
        jPanel3.add(jrb_ativo, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 20, -1, -1));

        jrb_inativo.setText("Inativo");
        jrb_inativo.setName("jrb_inativo"); // NOI18N
        jPanel3.add(jrb_inativo, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 50, -1, -1));

        jLabel20.setText("Estado");
        jLabel20.setName("jLabel20"); // NOI18N
        jPanel3.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 220, -1, -1));

        jtf_estado.setName("jtf_estado"); // NOI18N
        jtf_estado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtf_estadoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtf_estadoKeyReleased(evt);
            }
        });
        jPanel3.add(jtf_estado, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 240, 60, -1));

        jLabel23.setText("Cidade");
        jLabel23.setName("jLabel23"); // NOI18N
        jPanel3.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, -1, -1));

        jtf_cidade.setName("jtf_cidade"); // NOI18N
        jtf_cidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtf_cidadeActionPerformed(evt);
            }
        });
        jtf_cidade.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtf_cidadeKeyPressed(evt);
            }
        });
        jPanel3.add(jtf_cidade, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 240, 180, -1));

        jLabel17.setText("Observação");
        jLabel17.setName("jLabel17"); // NOI18N
        jPanel3.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 270, -1, -1));

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        jta_observacao.setColumns(20);
        jta_observacao.setRows(5);
        jta_observacao.setName("jta_observacao"); // NOI18N
        jScrollPane2.setViewportView(jta_observacao);

        jPanel3.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 290, 230, 150));

        jtf_data_nascimento.setName("jtf_data_nascimento"); // NOI18N
        jtf_data_nascimento.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtf_data_nascimentoFocusLost(evt);
            }
        });
        jtf_data_nascimento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtf_data_nascimentoKeyPressed(evt);
            }
        });
        jPanel3.add(jtf_data_nascimento, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 90, 110, -1));

        jtf_cpf_cliente.setName("jtf_cpf_cliente"); // NOI18N
        jtf_cpf_cliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtf_cpf_clienteActionPerformed(evt);
            }
        });
        jtf_cpf_cliente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtf_cpf_clienteFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtf_cpf_clienteFocusLost(evt);
            }
        });
        jtf_cpf_cliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtf_cpf_clienteKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtf_cpf_clienteKeyReleased(evt);
            }
        });
        jPanel3.add(jtf_cpf_cliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 90, 120, 30));

        jLabel21.setText("Telefone:");
        jLabel21.setName("jLabel21"); // NOI18N
        jPanel3.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 270, -1, -1));

        jb_adicionar_telefone.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/locadora/image/edit_add.png"))); // NOI18N
        jb_adicionar_telefone.setToolTipText("Incluir");
        jb_adicionar_telefone.setName("jb_adicionar_telefone"); // NOI18N
        jb_adicionar_telefone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_adicionar_telefoneActionPerformed(evt);
            }
        });
        jb_adicionar_telefone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jb_adicionar_telefoneKeyPressed(evt);
            }
        });
        jPanel3.add(jb_adicionar_telefone, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 290, 30, 30));

        jb_eliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/locadora/image/edit_remove.png"))); // NOI18N
        jb_eliminar.setToolTipText("Excluir");
        jb_eliminar.setName("jb_eliminar"); // NOI18N
        jb_eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_eliminarActionPerformed(evt);
            }
        });
        jPanel3.add(jb_eliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 320, 30, 30));

        jScrollPane4.setName("jScrollPane4"); // NOI18N

        jtbl_telefone.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Telefone"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jtbl_telefone.setName("jtbl_telefone"); // NOI18N
        jScrollPane4.setViewportView(jtbl_telefone);

        jPanel3.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 330, 230, 110));

        jtf_telefone.setName("jtf_telefone"); // NOI18N
        jtf_telefone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtf_telefoneActionPerformed(evt);
            }
        });
        jtf_telefone.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtf_telefoneFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtf_telefoneFocusLost(evt);
            }
        });
        jtf_telefone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtf_telefoneKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtf_telefoneKeyReleased(evt);
            }
        });
        jPanel3.add(jtf_telefone, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 290, 230, 30));

        jTabbedPane1.addTab("Cliente", jPanel3);

        jPanel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel2.setName("jPanel2"); // NOI18N
        jPanel2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jPanel2FocusGained(evt);
            }
        });
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel22.setText("Nome:");
        jLabel22.setName("jLabel22"); // NOI18N
        jPanel2.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, -1, -1));

        jLabel4.setText("Nascimento*");
        jLabel4.setName("jLabel4"); // NOI18N
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 40, -1, -1));

        jLabel24.setText("Parentesco*");
        jLabel24.setName("jLabel24"); // NOI18N
        jPanel2.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 90, -1, -1));

        jLabel5.setText("CPF");
        jLabel5.setName("jLabel5"); // NOI18N
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 90, -1, -1));

        jLabel25.setText("Telefone*");
        jLabel25.setName("jLabel25"); // NOI18N
        jPanel2.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, -1, -1));

        jtf_nome_dependente.setName("jtf_nome_dependente"); // NOI18N
        jtf_nome_dependente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtf_nome_dependenteActionPerformed(evt);
            }
        });
        jtf_nome_dependente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtf_nome_dependenteKeyPressed(evt);
            }
        });
        jPanel2.add(jtf_nome_dependente, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 270, -1));

        jtf_data_nascimento_dependente.setName("jtf_data_nascimento_dependente"); // NOI18N
        jtf_data_nascimento_dependente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtf_data_nascimento_dependenteKeyPressed(evt);
            }
        });
        jPanel2.add(jtf_data_nascimento_dependente, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 60, 110, -1));

        jtf_telefone_dependente.setName("jtf_telefone_dependente"); // NOI18N
        jtf_telefone_dependente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtf_telefone_dependenteActionPerformed(evt);
            }
        });
        jtf_telefone_dependente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtf_telefone_dependenteFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtf_telefone_dependenteFocusLost(evt);
            }
        });
        jtf_telefone_dependente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtf_telefone_dependenteKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtf_telefone_dependenteKeyReleased(evt);
            }
        });
        jPanel2.add(jtf_telefone_dependente, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 170, 30));

        jcb_parentesco.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Esposa", "Esposo", "Filho", "Filha", "Neta", "Neto", "Pai", "Mãe", "Sobrinho", "Sobrinha", "Avô", "Avó", "Tio", "Tia", "Namorada", "Namorado", "Noiva", "Noivo", "Cunhado", "Cunhada", "Primo", "Prima", "Amigo", "Amiga", "Outro" }));
        jcb_parentesco.setName("jcb_parentesco"); // NOI18N
        jcb_parentesco.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jcb_parentescoKeyPressed(evt);
            }
        });
        jPanel2.add(jcb_parentesco, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 110, -1, 30));

        jtf_cpf_dependente.setName("jtf_cpf_dependente"); // NOI18N
        jtf_cpf_dependente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtf_cpf_dependenteActionPerformed(evt);
            }
        });
        jtf_cpf_dependente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtf_cpf_dependenteFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtf_cpf_dependenteFocusLost(evt);
            }
        });
        jtf_cpf_dependente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtf_cpf_dependenteKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtf_cpf_dependenteKeyReleased(evt);
            }
        });
        jPanel2.add(jtf_cpf_dependente, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 110, 120, 30));

        jb_adicionar_dependente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/locadora/image/edit_add.png"))); // NOI18N
        jb_adicionar_dependente.setToolTipText("Incluir");
        jb_adicionar_dependente.setName("jb_adicionar_dependente"); // NOI18N
        jb_adicionar_dependente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_adicionar_dependenteActionPerformed(evt);
            }
        });
        jb_adicionar_dependente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jb_adicionar_dependenteKeyPressed(evt);
            }
        });
        jPanel2.add(jb_adicionar_dependente, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 110, 30, 30));

        jb_eliminar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/locadora/image/edit_remove.png"))); // NOI18N
        jb_eliminar1.setToolTipText("Excluir");
        jb_eliminar1.setName("jb_eliminar1"); // NOI18N
        jb_eliminar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_eliminar1ActionPerformed(evt);
            }
        });
        jPanel2.add(jb_eliminar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 110, 30, 30));

        jrb_ativo_dependente.setSelected(true);
        jrb_ativo_dependente.setText("Ativo");
        jrb_ativo_dependente.setName("jrb_ativo_dependente"); // NOI18N
        jrb_ativo_dependente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrb_ativo_dependenteActionPerformed(evt);
            }
        });
        jPanel2.add(jrb_ativo_dependente, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, -1));

        jrb_inativo_dependente.setText("Inativo");
        jrb_inativo_dependente.setName("jrb_inativo_dependente"); // NOI18N
        jrb_inativo_dependente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrb_inativo_dependenteActionPerformed(evt);
            }
        });
        jPanel2.add(jrb_inativo_dependente, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 10, -1, -1));

        jScrollPane5.setName("jScrollPane5"); // NOI18N

        jtbl_dependente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "Data Nascimento", "Telefone", "Parentesco", "CPF", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jtbl_dependente.setName("jtbl_dependente"); // NOI18N
        jScrollPane5.setViewportView(jtbl_dependente);

        jPanel2.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, 510, 280));

        jTabbedPane1.addTab("Dependentes", jPanel2);

        getContentPane().add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 580, 500));

        setSize(new java.awt.Dimension(632, 626));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jb_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_cancelarActionPerformed
        retornaJanelaPai();

}//GEN-LAST:event_jb_cancelarActionPerformed
    private void retornaJanelaPai() {
        setVisible(false);

        if (janelapai != null) {
            janelapai.setEnabled(true);
            janelapai.setVisible(true);
        }
    }
    private void jb_salvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_salvarActionPerformed
        enviaDados();
}//GEN-LAST:event_jb_salvarActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        jtf_nome_cliente.requestFocus();
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowOpened

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        retornaJanelaPai();
    }//GEN-LAST:event_formWindowClosed

    private void jtf_nome_clienteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_nome_clienteKeyPressed
        acionarAtalho(evt);
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jtf_data_nascimento.requestFocus();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_nome_clienteKeyPressed
    private void jtf_nome_clienteFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtf_nome_clienteFocusGained
        jtf_nome_cliente.setInputVerifier(new InputVerifier() {

            public boolean verify(JComponent input) {
                if (jtf_nome_cliente.getText().equals("")) {
                    JOptionPane.showMessageDialog(null, "Informe o principio ativo do produto");
                    jtf_nome_cliente.requestFocus();
                    return false;
                } else {
                    return true;
                }
            }
        });
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_nome_clienteFocusGained

    private void jtf_empresaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtf_empresaFocusGained
        try {
            if (jtf_cpf_cliente.getText().trim().length() == 14) {
                if (ValidaCPF.isCPF(jtf_cpf_cliente.getText()) == true) {
                    if (verificaCadastro(jtf_cpf_cliente.getText()) == true) {
                        jtf_cpf_cliente.setForeground(Color.black);
                    } else {
                        jtf_cpf_cliente.setForeground(Color.red);
                        jtf_cpf_cliente.requestFocus();
                    }
                } else {
                    jtf_cpf_cliente.setForeground(Color.red);
                    jtf_cpf_cliente.requestFocus();
                }
            } else {
                jtf_cpf_cliente.setForeground(Color.red);
                jtf_cpf_cliente.requestFocus();
            }
        } catch (Exception e) {
            jtf_cpf_cliente.setForeground(Color.red);
            jtf_cpf_cliente.requestFocus();
        }
    }//GEN-LAST:event_jtf_empresaFocusGained

    private void jtf_nome_clienteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_nome_clienteKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_nome_clienteKeyReleased

private void jtf_empresaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtf_empresaActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_jtf_empresaActionPerformed

private void jtf_empresaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_empresaKeyPressed
        acionarAtalho(evt);
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        jtf_profissao.requestFocus();
    }
// TODO add your handling code here:
}//GEN-LAST:event_jtf_empresaKeyPressed

    private void jtf_profissaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtf_profissaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_profissaoActionPerformed

    private void jrb_ativoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrb_ativoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jrb_ativoActionPerformed

    private void jtf_nome_clienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtf_nome_clienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_nome_clienteActionPerformed

    private void jtf_enderecoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtf_enderecoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_enderecoActionPerformed

    private void jb_adicionar_telefoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_adicionar_telefoneActionPerformed
        try {
            alimentarTelefone();
        } catch (ParseException ex) {
            Logger.getLogger(AtendimentoLocacao.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jb_adicionar_telefoneActionPerformed

    private void jb_eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_eliminarActionPerformed
        removeTelefone(jtbl_telefone);
    }//GEN-LAST:event_jb_eliminarActionPerformed

    private void jb_adicionar_dependenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_adicionar_dependenteActionPerformed
        adicionarDependente();
// TODO add your handling code here:
    }//GEN-LAST:event_jb_adicionar_dependenteActionPerformed

    private void jb_eliminar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_eliminar1ActionPerformed
        removeDependente(jtbl_dependente);
        // TODO add your handling code here:
    }//GEN-LAST:event_jb_eliminar1ActionPerformed

    private void jtf_cidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtf_cidadeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_cidadeActionPerformed

    private void jtf_nome_dependenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtf_nome_dependenteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_nome_dependenteActionPerformed

    private void jrb_ativo_dependenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrb_ativo_dependenteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jrb_ativo_dependenteActionPerformed

    private void jrb_inativo_dependenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrb_inativo_dependenteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jrb_inativo_dependenteActionPerformed

    private void jtf_cpf_clienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtf_cpf_clienteActionPerformed

    }//GEN-LAST:event_jtf_cpf_clienteActionPerformed

    private void jtf_cpf_clienteFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtf_cpf_clienteFocusGained

    }//GEN-LAST:event_jtf_cpf_clienteFocusGained

    private void jtf_cpf_clienteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtf_cpf_clienteFocusLost


    }//GEN-LAST:event_jtf_cpf_clienteFocusLost

    private void jtf_cpf_clienteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_cpf_clienteKeyPressed
            acionarAtalho(evt);
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        jtf_empresa.requestFocus();
    }
    }//GEN-LAST:event_jtf_cpf_clienteKeyPressed

    private void jtf_cpf_clienteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_cpf_clienteKeyReleased

    }//GEN-LAST:event_jtf_cpf_clienteKeyReleased

    private void jtf_telefoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtf_telefoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_telefoneActionPerformed

    private void jtf_telefoneFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtf_telefoneFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_telefoneFocusGained

    private void jtf_telefoneFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtf_telefoneFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_telefoneFocusLost

    private void jtf_telefoneKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_telefoneKeyPressed
        acionarAtalho(evt);
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jb_adicionar_telefone.requestFocus();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_telefoneKeyPressed

    private void jtf_telefoneKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_telefoneKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_telefoneKeyReleased

    private void jtf_data_nascimentoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtf_data_nascimentoFocusLost
        try {
            Data data = new Data();
            int idade;

            if (jtf_data_nascimento.getText().trim().length() < 10) {
                jtf_data_nascimento.setForeground(Color.red);
                jtf_data_nascimento.requestFocus();
            } else if (jtf_data_nascimento.getText().equals("  /  /    ")) {
                jtf_data_nascimento.setForeground(Color.red);
                jtf_data_nascimento.requestFocus();
            } else {
                if (validaData(jtf_data_nascimento.getText())) {
                    idade = data.calcularIdade(new SimpleDateFormat("dd/MM/yyyy").parse((String) jtf_data_nascimento.getText()));
                    if (idade < 18) {
                        int selectedOption = JOptionPane.showConfirmDialog(this, "Cliente menor de Idade, Desejar continuar?", "Atenção", JOptionPane.YES_NO_OPTION);
                        if (selectedOption == JOptionPane.YES_NO_OPTION) {
                            jtf_data_nascimento.setForeground(Color.black);
//                            jtf_cpf_cliente.requestFocus();
                        } else {
                            jtf_data_nascimento.setForeground(Color.red);
                            jtf_data_nascimento.requestFocus();
                        }
                    } else {
                        jtf_data_nascimento.setForeground(Color.black);
//                        jtf_cpf_cliente.requestFocus();
                    }
                } else {
                    jtf_data_nascimento.setForeground(Color.red);
                    jtf_data_nascimento.requestFocus();
                }

            }
        } catch (ParseException ex) {
            ex.printStackTrace();
            jtf_data_nascimento.setForeground(Color.red);
            jtf_data_nascimento.requestFocus();
        } catch (NumberFormatException ex) {
            ex.printStackTrace();
            
            jtf_data_nascimento.setText("  /  /    ");
            jtf_data_nascimento.setForeground(Color.red);
            jtf_data_nascimento.requestFocus();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_data_nascimentoFocusLost

    private void jtf_cpf_dependenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtf_cpf_dependenteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_cpf_dependenteActionPerformed

    private void jtf_cpf_dependenteFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtf_cpf_dependenteFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_cpf_dependenteFocusGained

    private void jtf_cpf_dependenteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtf_cpf_dependenteFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_cpf_dependenteFocusLost

    private void jtf_cpf_dependenteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_cpf_dependenteKeyPressed
        acionarAtalho(evt);
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jb_adicionar_dependente.requestFocus();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_cpf_dependenteKeyPressed

    private void jtf_cpf_dependenteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_cpf_dependenteKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_cpf_dependenteKeyReleased

    private void jtf_telefone_dependenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtf_telefone_dependenteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_telefone_dependenteActionPerformed

    private void jtf_telefone_dependenteFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtf_telefone_dependenteFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_telefone_dependenteFocusGained

    private void jtf_telefone_dependenteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtf_telefone_dependenteFocusLost
        if (verificar_campo_telefone(jtf_telefone_dependente.getText()) == false) {
            jtf_telefone_dependente.setCaretColor(Color.red);
            jtf_telefone_dependente.requestFocus();
        } else {
            jtf_telefone_dependente.setCaretColor(Color.black);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_telefone_dependenteFocusLost

    private void jtf_telefone_dependenteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_telefone_dependenteKeyPressed
                acionarAtalho(evt);
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jcb_parentesco.requestFocus();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_telefone_dependenteKeyPressed

    private void jtf_telefone_dependenteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_telefone_dependenteKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_telefone_dependenteKeyReleased

    private void jPanel2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPanel2FocusGained
        jtf_nome_dependente.requestFocus();
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel2FocusGained

    private void jtf_data_nascimentoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_data_nascimentoKeyPressed
        acionarAtalho(evt);
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jtf_cpf_cliente.requestFocus();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_data_nascimentoKeyPressed

    private void jtf_profissaoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_profissaoKeyPressed
            acionarAtalho(evt);
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        jtf_endereco.requestFocus();
    }
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_profissaoKeyPressed

    private void jtf_enderecoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_enderecoKeyPressed
            acionarAtalho(evt);
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        jtf_bairro.requestFocus();
    }
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_enderecoKeyPressed

    private void jtf_bairroKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_bairroKeyPressed
    acionarAtalho(evt);
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        jtf_complemento.requestFocus();
    }
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_bairroKeyPressed

    private void jtf_complementoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_complementoKeyPressed
    acionarAtalho(evt);
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        jtf_cidade.requestFocus();
    }
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_complementoKeyPressed

    private void jtf_cidadeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_cidadeKeyPressed
            acionarAtalho(evt);
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        jtf_estado.requestFocus();
    }
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_cidadeKeyPressed

    private void jtf_estadoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_estadoKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_estadoKeyReleased

    private void jtf_estadoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_estadoKeyPressed
            acionarAtalho(evt);
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        jtf_email.requestFocus();
    }
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_estadoKeyPressed

    private void jtf_emailKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_emailKeyPressed
            acionarAtalho(evt);
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        jtf_telefone.requestFocus();
    }
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_emailKeyPressed

    private void jb_adicionar_telefoneKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jb_adicionar_telefoneKeyPressed
        acionarAtalho(evt);
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            try {
                alimentarTelefone();
            } catch (ParseException ex) {
                Logger.getLogger(AtendimentoLocacao.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jb_adicionar_telefoneKeyPressed

    private void jtf_nome_dependenteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_nome_dependenteKeyPressed
                acionarAtalho(evt);
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jtf_data_nascimento_dependente.requestFocus();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_nome_dependenteKeyPressed

    private void jtf_data_nascimento_dependenteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_data_nascimento_dependenteKeyPressed
                acionarAtalho(evt);
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jtf_telefone_dependente.requestFocus();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_data_nascimento_dependenteKeyPressed

    private void jcb_parentescoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jcb_parentescoKeyPressed
        acionarAtalho(evt);
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jtf_cpf_dependente.requestFocus();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jcb_parentescoKeyPressed

    private void jb_adicionar_dependenteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jb_adicionar_dependenteKeyPressed
                acionarAtalho(evt);
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            adicionarDependente();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jb_adicionar_dependenteKeyPressed

    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseClicked
        jtf_nome_dependente.requestFocus();
        // TODO add your handling code here:
    }//GEN-LAST:event_jTabbedPane1MouseClicked

    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new AtualizaCliente().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton jb_adicionar_dependente;
    private javax.swing.JButton jb_adicionar_telefone;
    private javax.swing.JButton jb_cancelar;
    private javax.swing.JButton jb_eliminar;
    private javax.swing.JButton jb_eliminar1;
    private javax.swing.JButton jb_salvar;
    private javax.swing.JComboBox jcb_parentesco;
    public static javax.swing.JRadioButton jrb_ativo;
    public static javax.swing.JRadioButton jrb_ativo_dependente;
    public static javax.swing.JRadioButton jrb_inativo;
    public static javax.swing.JRadioButton jrb_inativo_dependente;
    public static javax.swing.JTextArea jta_observacao;
    public static javax.swing.JTable jtbl_dependente;
    public static javax.swing.JTable jtbl_telefone;
    public static javax.swing.JTextField jtf_bairro;
    public static javax.swing.JTextField jtf_cidade;
    public static javax.swing.JTextField jtf_codigo_cliente;
    public static javax.swing.JTextField jtf_complemento;
    public static javax.swing.JFormattedTextField jtf_cpf_cliente;
    public static javax.swing.JFormattedTextField jtf_cpf_dependente;
    public static javax.swing.JFormattedTextField jtf_data_nascimento;
    public static javax.swing.JFormattedTextField jtf_data_nascimento_dependente;
    public static javax.swing.JTextField jtf_email;
    public static javax.swing.JTextField jtf_empresa;
    public static javax.swing.JTextField jtf_endereco;
    public static javax.swing.JTextField jtf_estado;
    public static javax.swing.JTextField jtf_nome_cliente;
    public static javax.swing.JTextField jtf_nome_dependente;
    public static javax.swing.JTextField jtf_profissao;
    public static javax.swing.JFormattedTextField jtf_telefone;
    public static javax.swing.JFormattedTextField jtf_telefone_dependente;
    private javax.swing.JTextArea tfa_similar;
    // End of variables declaration//GEN-END:variables

    public void setTela(String permissao) {
        if (permissao.equals("usuario")) {
        } else {
        }
    }

    private void enviaDados() {
        if (verificarCampos()) {
            controller = new SiscomController();
            controller.processarRequisicao("atualizarCliente");
            JOptionPane.showMessageDialog(null, "Atualização efetuada com sucesso");
            janelapai.buscarDados();
            retornaJanelaPai();
        }
    }

    public boolean verificaCadastro(String cpf) {
        if (cpf.equals("")) {
        } else {
            pool = new Pool();
            ClienteDAO clienteDAO = new ClienteDAO(pool);
            cliente = null;
            cliente = clienteDAO.getCliente_cpf(cpf, Integer.parseInt(jtf_codigo_cliente.getText()));
            if (null != cliente) {
                return true;
            } else {
                JOptionPane.showMessageDialog(null, "CPF já existente");
                return false;
            }
        }
        return false;
    }

    public boolean verificarCampos() {
        String msgERRO = "Preencha os campos obrigatórios:\n";

        if (jtf_nome_cliente.getText().trim().equals("")) {
            msgERRO = msgERRO + " *Nome\n";
        }
        if (jtf_data_nascimento.getForeground().equals(Color.red)) {
            msgERRO = msgERRO + " *Data de Nascimento\n";
        } else if (jtf_data_nascimento.getText().trim().length() < 10) {
            msgERRO = msgERRO + " *Data de Nascimento\n";
        }

        if (jtf_cpf_cliente.getForeground().equals(Color.red)) {
            msgERRO = msgERRO + " *CPF\n";
        } else if (jtf_cpf_cliente.getText().trim().length() < 14) {
            msgERRO = msgERRO + " *CPF\n";
        }

        if (jtf_empresa.getText().trim().equals("")) {
            msgERRO = msgERRO + " *Empresa\n";
        }
        if (jtf_profissao.getText().trim().equals("")) {
            msgERRO = msgERRO + " *Profissão\n";
        }
        if (jtf_endereco.getText().trim().equals("")) {
            msgERRO = msgERRO + " *Endereço\n";
        }
        if (jtf_bairro.getText().trim().equals("")) {
            msgERRO = msgERRO + " *Bairro\n";
        }
        if (jtf_cidade.getText().trim().equals("")) {
            msgERRO = msgERRO + " *Cidade\n";
        }
        if (jtf_estado.getText().trim().equals("")) {
            msgERRO = msgERRO + " *Estado\n";
        }

        if (jtbl_telefone.getRowCount() <= 0) {
            msgERRO = msgERRO + " *Informe no mínimo um telefone\n";
        }

        if (!msgERRO.equals("Preencha os campos obrigatórios:\n")) {
            JOptionPane.showMessageDialog(this, msgERRO);
            jtf_nome_cliente.requestFocus();
            return false;
        } else {
            return true;
        }

    }

    public void setStatusTela(boolean status) {
        if (status) {
            this.setVisible(status);
        }
        this.setEnabled(status);
    }

    Telefone telefone = new Telefone();
    Cliente cliente;

    public void alimentarDependente(Dependente dependente) {

        if (dependente != null) {

            adicionarDependentes();

            DefaultTableModel row = (DefaultTableModel) jtbl_dependente.getModel();
            ItemDbGrid hashDbGrid = new ItemDbGrid(dependente, dependente.getNome_dependente());
            row.addRow(new Object[]{dependente.getNome_dependente(), jtf_data_nascimento_dependente.getText(),
                dependente.getTelefone(), dependente.getParentesco(), dependente.getCPF(), dependente.getStatus()});
            jtf_nome_dependente.setText("");
            jtf_telefone_dependente.setText("");
            jcb_parentesco.setSelectedIndex(0);
            jtf_data_nascimento_dependente.setText("");
            jtf_cpf_dependente.setText("");
            jtf_nome_dependente.requestFocus();
            dependentes.add(dependente);
        } else {
            JOptionPane.showMessageDialog(null, "Não foi possivel adicionar ");
        }

    }

    public void alimentarTelefone() throws ParseException {
        if (verificar_campo_telefone(jtf_telefone.getText()) == true) { //&& (verificaTabela()

            adicionarTelefone();

            telefone.setCliente(cliente);
            telefone.setTelefone(jtf_telefone.getText());

            DefaultTableModel row = (DefaultTableModel) jtbl_telefone.getModel();
            ItemDbGrid hashDbGrid = new ItemDbGrid(telefone, telefone.getTelefone());
            row.addRow(new Object[]{telefone.getTelefone()});
            jtf_telefone.setText("");
            jtf_telefone.requestFocus();
        } else {
            JOptionPane.showMessageDialog(null, "Não foi possivel adicionar ");
        }
    }

    public boolean verificar_campo_telefone(String telefone) {
        String msgERRO = "Preencha os campos obrigatórios:\n";

        if (telefone.equals("")) {
            msgERRO = msgERRO + " *Telefone\n";
        } else if (telefone.trim().length() < 14) {
            msgERRO = msgERRO + " *Telefone\n";
        }

        if (!msgERRO.equals("Preencha os campos obrigatórios:\n")) {
            JOptionPane.showMessageDialog(this, msgERRO);
            return false;
        } else {
            return true;
        }
    }

    public boolean verificar_campo_dependente() {
        String msgERRO = "Preencha os campos obrigatórios:\n";

        if (jtf_nome_dependente.getText().equals("")) {
            msgERRO = msgERRO + " *Nome Dependente\n";
        }

        if (jtf_telefone_dependente.getText().trim().length() != 14) {
            msgERRO = msgERRO + " *Telefone Dependente\n";
        }

        if (jtf_data_nascimento_dependente.getText().trim().length() != 10) {
            msgERRO = msgERRO + " *Data Inválida\n";
        }

        if (!msgERRO.equals("Preencha os campos obrigatórios:\n")) {
            JOptionPane.showMessageDialog(this, msgERRO);
            jtf_nome_dependente.requestFocus();
            return false;
        } else {
            return true;
        }
    }

    public void removeCliente(JTable tb) {
        if (tb != null) {
            DefaultTableModel row = (DefaultTableModel) jtbl_telefone.getModel();
            if (tb.getSelectedRow() != -1) {
                int selectedOption = JOptionPane.showConfirmDialog(this, "Deseja excluir ?", "Atenção", JOptionPane.YES_NO_OPTION);
                if (selectedOption == JOptionPane.YES_NO_OPTION) {
                    row.removeRow(tb.getSelectedRow());
                }
            } else {
                JOptionPane.showMessageDialog(null, "Selecione um produto");
            }
        }
    }

    public void carregaTelefone(Integer codigo_cliente) {
        try {
            if (codigo_cliente != null) {
                pool = new Pool();
                TelefoneDAO telefoneDAO = new TelefoneDAO(pool);
                telefones = null;
                telefones = telefoneDAO.getTelefones(codigo_cliente);
                if (telefones != null) {
                    mostrar_telefones(telefones);
                }
            }
        } catch (ParseException ex) {
            Logger.getLogger(AtualizaCliente.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void carregaDependente(Integer codigo_cliente) {
        try {
            if (codigo_cliente != null) {
                pool = new Pool();
                DependenteDAO dependenteDAO = new DependenteDAO(pool);
                dependentes = dependenteDAO.getDependentes(codigo_cliente);

                mostrar_dependentes(dependentes);
            }
        } catch (SQLException ex) {
            Logger.getLogger(AtualizaCliente.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(AtualizaCliente.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void mostrar_telefones(List<Telefone> telefones) throws ParseException {
        DefaultTableModel tableModel = (DefaultTableModel) jtbl_telefone.getModel();
        tableModel.setNumRows(0);

        if (telefones != null) {

            for (Telefone telefone1 : telefones) {
                Telefone tel = new Telefone();
                tel.setCodigo_telefone(telefone1.getCodigo_telefone());
                tel.setTelefone(telefone1.getTelefone());
                Cliente cli = new Cliente();
                cli.setCodigo_cliente(telefone1.getCodigo_telefone());
                tel.setCliente(cli);
                DefaultTableModel row = (DefaultTableModel) jtbl_telefone.getModel();
                ItemDbGrid hashDbGrid = new ItemDbGrid(tel, tel.getTelefone());
                row.addRow(new Object[]{hashDbGrid});
            }
        }
    }

    public void mostrar_dependentes(List<Dependente> dependentes) throws ParseException {
        DefaultTableModel tableModel = (DefaultTableModel) jtbl_dependente.getModel();
        tableModel.setNumRows(0);

        if (dependentes != null) {

            for (Dependente dependente1 : dependentes) {
                Dependente dependente = new Dependente();
                dependente.setCodigo_dependente(dependente1.getCodigo_dependente());
                dependente.setNome_dependente(dependente1.getNome_dependente());
                dependente.setParentesco(dependente1.getParentesco());
                dependente.setTelefone(dependente1.getTelefone());
                dependente.setCPF(dependente1.getCPF());
                dependente.setStatus(dependente1.getStatus());
                
                SimpleDateFormat in = new SimpleDateFormat("yyyy-MM-dd");
                SimpleDateFormat out = new SimpleDateFormat("dd/MM/yyyy");
                String data_nascimento = out.format(in.parse(dependente1.getData_nascimento().toString()));
                Cliente cli = new Cliente();
                cli.setCodigo_cliente(dependente1.getCodigo_dependente());
                dependente.setCliente(cli);
                
                
                DefaultTableModel row = (DefaultTableModel) jtbl_dependente.getModel();
                ItemDbGrid hashDbGrid = new ItemDbGrid(dependente, dependente.getNome_dependente());
                row.addRow(new Object[]{hashDbGrid, data_nascimento, dependente.getTelefone(), dependente.getParentesco(), dependente.getCPF(), dependente.getStatus()});
            }

        }
    }

    public void removeDependente(JTable tb) {
        if (tb != null) {
            DefaultTableModel row = (DefaultTableModel) tb.getModel();

            try {
                if (tb.getSelectedRow() != -1) {
                    int selectedOption = JOptionPane.showConfirmDialog(this, "Deseja excluir ?", "Atenção", JOptionPane.YES_NO_OPTION);
                    if (selectedOption == JOptionPane.YES_NO_OPTION) {
                        DependenteDAO dependenteDAo = new DependenteDAO(pool);

                        if (dependenteDAo.excluir(dependentes.get(tb.getSelectedRow()).getCodigo_dependente())) {
                            row.removeRow(tb.getSelectedRow());
                        }
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Selecione um Dependente");
                }
            } catch (SQLException ex) {
                Logger.getLogger(AtualizaCliente.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    public void removeTelefone(JTable tb) {
        if (tb != null) {
            DefaultTableModel row = (DefaultTableModel) tb.getModel();
            try {
                if (tb.getSelectedRow() != -1) {
                    int selectedOption = JOptionPane.showConfirmDialog(this, "Deseja excluir ?", "Atenção", JOptionPane.YES_NO_OPTION);
                    if (selectedOption == JOptionPane.YES_NO_OPTION) {
                        TelefoneDAO telefoneDAO = new TelefoneDAO(pool);

                        if (telefoneDAO.excluir(telefones.get(tb.getSelectedRow()).getCodigo_telefone())) {
                            row.removeRow(tb.getSelectedRow());
                        }
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Selecione um Dependente");
                }
            } catch (SQLException ex) {
                Logger.getLogger(AtualizaCliente.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    public void adicionarTelefone() {
        try {
            List<Telefone> itens_telefone = new ArrayList();

            telefone = new Telefone();
            telefone.setTelefone(jtf_telefone.getText());
            itens_telefone.add(telefone);

            cliente = new Cliente();
            if (!jtf_codigo_cliente.getText().equals("")) {
                cliente.setCodigo_cliente(Integer.parseInt(jtf_codigo_cliente.getText()));

                TelefoneDAO telefoneDAO = new TelefoneDAO(pool);
                telefoneDAO.salvar(itens_telefone, cliente);
            }
        } catch (SQLException ex) {
            Logger.getLogger(AtualizaCliente.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void adicionarDependentes() {
        try {
            Dependente dependente = new Dependente();
            List<Dependente> itens_dependente = new ArrayList();

            cliente = new Cliente();
            if (!jtf_codigo_cliente.getText().equals("")) {
                cliente.setCodigo_cliente(Integer.parseInt(jtf_codigo_cliente.getText()));

                dependente.setNome_dependente(jtf_nome_dependente.getText());
                dependente.setTipo_dependente("1");
                dependente.setData_nascimento(new SimpleDateFormat("dd/MM/yyyy").parse(jtf_data_nascimento_dependente.getText()));
                dependente.setCPF(jtf_cpf_dependente.getText());
                dependente.setTelefone(jtf_telefone_dependente.getText());
                dependente.setParentesco((String) jcb_parentesco.getSelectedItem());

                itens_dependente.add(dependente);

                DependenteDAO dependenteDAO = new DependenteDAO(pool);
                dependenteDAO.salvar(itens_dependente, cliente);
            }

        } catch (ParseException ex) {
            Logger.getLogger(AtualizaCliente.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(AtualizaCliente.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    public void acionarAtalho(java.awt.event.KeyEvent evt) {
        if (evt.getKeyCode() == KeyEvent.VK_F10) {
            enviaDados();
        }
        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            setVisible(false);
            janelapai.setStatusTela(true);
        }
    }

    private void adicionarDependente() {
                try {
            Dependente dependente = new Dependente();
            if (verificar_campo_dependente() == true) {
                dependente.setCliente(cliente);
                dependente.setNome_dependente(jtf_nome_dependente.getText());
                dependente.setData_nascimento(new SimpleDateFormat("dd/MM/yyyy").parse((String) jtf_data_nascimento_dependente.getText()));
                dependente.setTelefone(jtf_telefone_dependente.getText());
                dependente.setParentesco((String) jcb_parentesco.getSelectedItem());

                if (jtf_cpf_dependente.getText().trim().length() != 14) {
                    dependente.setCPF("");
                } else if (jtf_cpf_dependente.getCaretColor().equals(Color.RED)) {
                    dependente.setCPF("");
                } else {
                    dependente.setCPF(jtf_cpf_dependente.getText());
                }

                if (jrb_ativo_dependente.isSelected() == true) {
                    dependente.setStatus(true);
                } else {
                    dependente.setStatus(false);
                }
                alimentarDependente(dependente);
                jtf_nome_dependente.requestFocus();
            } else {
                JOptionPane.showMessageDialog(null, "Não foi possivel adicionar ");
            }
        } catch (ParseException ex) {
            
            JOptionPane.showMessageDialog(null, "Error: " + ex);
        }
    }
    public static boolean validaData(String dataString) throws java.text.ParseException {

        if (!dataString.equals("")) {

            DateFormat df = new SimpleDateFormat("dd/MM/yyyy");
            Calendar cal = new GregorianCalendar();
            Date dataDigitada = new Date(df.parse(dataString).getTime());
            Date dataAtual = new Date(System.currentTimeMillis());

            // gerando o calendar
            cal.setTime(df.parse(dataString));

            // separando os dados da string para comparacao e validacao
            String[] data = dataString.split("/");
            String dia = data[0];
            String mes = data[1];
            String ano = data[2];

            // testando se hah discrepancia entre a data que foi
            // inserida no caledar e a data que foi passada como
            // string. se houver diferenca, a data passada era
            // invalida
            if ((new Integer(dia)).intValue() != (new Integer(cal.get(Calendar.DAY_OF_MONTH))).intValue()) {
                // dia nao casou
                return (false);
            }
            if ((new Integer(mes)).intValue() != (new Integer(cal.get(Calendar.MONTH) + 1)).intValue()) {
                // mes nao casou

                return (false);
            }
            if ((new Integer(ano)).intValue() != (new Integer(cal.get(Calendar.YEAR))).intValue()) {
                // ano nao casou

                return (false);
            }
            if (dataDigitada.after(dataAtual)) {
                // data maior que atual
                return (false);
            }
            return (true);
        }
        return false;
    }
}
