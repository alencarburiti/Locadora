package br.com.locadora.view;

import br.com.locadora.conexao.InterfacePool;
import br.com.locadora.conexao.Pool;
import br.com.locadora.controller.SiscomController;
import br.com.locadora.model.bean.AcessoUsuario;
import br.com.locadora.model.bean.Cliente;
import br.com.locadora.model.bean.Copia;
import br.com.locadora.model.bean.Dependente;
import br.com.locadora.model.bean.Diaria;
import br.com.locadora.model.bean.ItemLocacao;
import br.com.locadora.model.bean.Lancamento;
import br.com.locadora.model.bean.Locacao;
import br.com.locadora.model.bean.Objeto;
import br.com.locadora.model.bean.TipoServico;
import br.com.locadora.model.bean.Usuario;
import br.com.locadora.model.dao.CopiaDAO;
import br.com.locadora.model.dao.DiariaDAO;
import br.com.locadora.model.dao.LocacaoDAO;
import br.com.locadora.model.dao.UsuarioDAO;
import br.com.locadora.util.ArquivoConfiguracao;
import br.com.locadora.util.Printer;
import br.com.locadora.util.LimitadorTexto;
import br.com.locadora.util.Moeda;
import br.com.locadora.util.TemaInterface;
import br.com.locadora.util.UnaccentedDocument;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.io.File;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;
import javax.print.PrintException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ALENCAR
 */
public final class EntradaCaixaLocacao extends javax.swing.JFrame {

    public AtendimentoLocacao janelapaiLocacao;
    public InterfacePool pool;
    public SiscomController controller;
    public String action;
    public static List<ItemLocacao> itens;
    public Moeda moeda;

    /**
     * Creates new form ProdutoCadastroGUI
     */
    public EntradaCaixaLocacao() {
        initComponents();
        TemaInterface.getInterface(this);
        janelapaiLocacao = null;
    }

    //public ProdutoConsultarGUI janelapaim;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tfa_similar = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        jtf_login = new javax.swing.JTextField();
        jpf_senha = new javax.swing.JPasswordField();
        jb_logar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jtf_valor_total_locacao = new javax.swing.JTextField(new LimitadorTexto(80), "",10);
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jtf_desconto = new javax.swing.JTextField(new LimitadorTexto(80), "",10);
        jLabel7 = new javax.swing.JLabel();
        jtf_troco = new javax.swing.JTextField(new LimitadorTexto(80), "",10);
        jLabel11 = new javax.swing.JLabel();
        jtf_debito_anterior = new javax.swing.JTextField(new LimitadorTexto(80), "",10);
        jLabel12 = new javax.swing.JLabel();
        jtf_valor_total_a_pagar = new javax.swing.JTextField(new LimitadorTexto(80), "",10);
        jLabel8 = new javax.swing.JLabel();
        jtf_debito_atual = new javax.swing.JTextField(new LimitadorTexto(80), "",10);
        jLabel6 = new javax.swing.JLabel();
        jtf_valor_pago = new javax.swing.JTextField(new LimitadorTexto(80), "",10);
        jb_imprimir = new javax.swing.JButton();
        jb_salvar = new javax.swing.JButton();
        jb_cancelar1 = new javax.swing.JButton();

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        tfa_similar.setColumns(20);
        tfa_similar.setRows(5);
        tfa_similar.setName("tfa_similar"); // NOI18N
        jScrollPane1.setViewportView(tfa_similar);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Caixa - Atendimento Locação");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                formFocusGained(evt);
            }
        });
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Verificar Permissão"));
        jPanel1.setName("jPanel1"); // NOI18N

        jtf_login.setEditable(false);
        jtf_login.setFont(new java.awt.Font("Helvetica Neue", 0, 13)); // NOI18N
        jtf_login.setName("jtf_login"); // NOI18N
        jtf_login.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtf_loginKeyPressed(evt);
            }
        });

        jpf_senha.setFont(new java.awt.Font("Helvetica Neue", 0, 13)); // NOI18N
        jpf_senha.setName("jpf_senha"); // NOI18N
        jpf_senha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jpf_senhaActionPerformed(evt);
            }
        });
        jpf_senha.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jpf_senhaKeyPressed(evt);
            }
        });

        jb_logar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/locadora/image/http___iconesbr.oficinadanet.com_8533_16x16.png"))); // NOI18N
        jb_logar.setText("OK !");
        jb_logar.setName("jb_logar"); // NOI18N
        jb_logar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_logarActionPerformed(evt);
            }
        });
        jb_logar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jb_logarKeyPressed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 0, 13)); // NOI18N
        jLabel2.setText("Login:");
        jLabel2.setName("jLabel2"); // NOI18N

        jLabel3.setText("Senha:");
        jLabel3.setName("jLabel3"); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtf_login, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jpf_senha, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(10, 10, 10)
                .addComponent(jb_logar, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jb_logar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(1, 1, 1)
                        .addComponent(jtf_login, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jpf_senha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Caixa"));
        jPanel2.setName("jPanel2"); // NOI18N
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jtf_valor_total_locacao.setDocument(new UnaccentedDocument());
        jtf_valor_total_locacao.setEditable(false);
        jtf_valor_total_locacao.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jtf_valor_total_locacao.setForeground(new java.awt.Color(204, 0, 0));
        jtf_valor_total_locacao.setText("R$ 0,00");
        jtf_valor_total_locacao.setName("jtf_valor_total_locacao");
        jtf_valor_total_locacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtf_valor_total_locacaoActionPerformed(evt);
            }
        });
        jtf_valor_total_locacao.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtf_valor_total_locacaoFocusGained(evt);
            }
        });
        jtf_valor_total_locacao.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtf_valor_total_locacaoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtf_valor_total_locacaoKeyReleased(evt);
            }
        });
        jPanel2.add(jtf_valor_total_locacao, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 20, 170, -1));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel1.setText("Total Locação:");
        jLabel1.setName("jLabel1"); // NOI18N
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, -1, -1));

        jLabel5.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel5.setText("Valor Desconto:");
        jLabel5.setName("jLabel5"); // NOI18N
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 190, -1, -1));

        jtf_valor_total_locacao.setDocument(new UnaccentedDocument());
        jtf_desconto.setEditable(false);
        jtf_desconto.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jtf_desconto.setText("R$ 0,00");
        jtf_desconto.setEnabled(false);
        jtf_desconto.setName("jtf_desconto"); // NOI18N
        jtf_desconto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtf_descontoActionPerformed(evt);
            }
        });
        jtf_desconto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtf_descontoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtf_descontoFocusLost(evt);
            }
        });
        jtf_desconto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtf_descontoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtf_descontoKeyReleased(evt);
            }
        });
        jPanel2.add(jtf_desconto, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 180, 170, -1));

        jLabel7.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel7.setText("Troco:");
        jLabel7.setName("jLabel7"); // NOI18N
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 270, -1, -1));

        jtf_valor_total_locacao.setDocument(new UnaccentedDocument());
        jtf_troco.setEditable(false);
        jtf_troco.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jtf_troco.setText("R$ 0,00");
        jtf_troco.setName("jtf_troco"); // NOI18N
        jtf_troco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtf_trocoActionPerformed(evt);
            }
        });
        jtf_troco.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtf_trocoFocusGained(evt);
            }
        });
        jtf_troco.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtf_trocoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtf_trocoKeyReleased(evt);
            }
        });
        jPanel2.add(jtf_troco, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 260, 170, -1));

        jLabel11.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel11.setText("Débito Anterior:");
        jLabel11.setName("jLabel11"); // NOI18N
        jPanel2.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, -1, -1));

        jtf_valor_total_locacao.setDocument(new UnaccentedDocument());
        jtf_debito_anterior.setEditable(false);
        jtf_debito_anterior.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jtf_debito_anterior.setForeground(new java.awt.Color(204, 0, 0));
        jtf_debito_anterior.setText("R$ 0,00");
        jtf_debito_anterior.setName("jtf_debito_anterior"); // NOI18N
        jtf_debito_anterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtf_debito_anteriorActionPerformed(evt);
            }
        });
        jtf_debito_anterior.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtf_debito_anteriorFocusGained(evt);
            }
        });
        jtf_debito_anterior.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtf_debito_anteriorKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtf_debito_anteriorKeyReleased(evt);
            }
        });
        jPanel2.add(jtf_debito_anterior, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 60, 170, -1));

        jLabel12.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel12.setText("Total à pagar:");
        jLabel12.setName("jLabel12"); // NOI18N
        jPanel2.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 110, -1, -1));

        jtf_valor_total_locacao.setDocument(new UnaccentedDocument());
        jtf_valor_total_a_pagar.setEditable(false);
        jtf_valor_total_a_pagar.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jtf_valor_total_a_pagar.setForeground(new java.awt.Color(204, 0, 0));
        jtf_valor_total_a_pagar.setText("R$ 0,00");
        jtf_valor_total_a_pagar.setName("jtf_valor_total_a_pagar"); // NOI18N
        jtf_valor_total_a_pagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtf_valor_total_a_pagarActionPerformed(evt);
            }
        });
        jtf_valor_total_a_pagar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtf_valor_total_a_pagarFocusGained(evt);
            }
        });
        jtf_valor_total_a_pagar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtf_valor_total_a_pagarKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtf_valor_total_a_pagarKeyReleased(evt);
            }
        });
        jPanel2.add(jtf_valor_total_a_pagar, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 100, 170, -1));

        jLabel8.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel8.setText("Débito Atual:");
        jLabel8.setName("jLabel8"); // NOI18N
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 230, -1, -1));

        jtf_valor_total_locacao.setDocument(new UnaccentedDocument());
        jtf_debito_atual.setEditable(false);
        jtf_debito_atual.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jtf_debito_atual.setText("R$ 0,00");
        jtf_debito_atual.setName("jtf_debito_atual"); // NOI18N
        jtf_debito_atual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtf_debito_atualActionPerformed(evt);
            }
        });
        jtf_debito_atual.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtf_debito_atualFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtf_debito_atualFocusLost(evt);
            }
        });
        jtf_debito_atual.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtf_debito_atualKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtf_debito_atualKeyReleased(evt);
            }
        });
        jPanel2.add(jtf_debito_atual, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 220, 170, -1));

        jLabel6.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel6.setText("Valor Pago:");
        jLabel6.setName("jLabel6"); // NOI18N
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 150, -1, -1));

        jtf_valor_total_locacao.setDocument(new UnaccentedDocument());
        jtf_valor_pago.setEditable(false);
        jtf_valor_pago.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jtf_valor_pago.setText("R$ 0,00");
        jtf_valor_pago.setEnabled(false);
        jtf_valor_pago.setName("jtf_valor_pago"); // NOI18N
        jtf_valor_pago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtf_valor_pagoActionPerformed(evt);
            }
        });
        jtf_valor_pago.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtf_valor_pagoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtf_valor_pagoFocusLost(evt);
            }
        });
        jtf_valor_pago.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtf_valor_pagoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtf_valor_pagoKeyReleased(evt);
            }
        });
        jPanel2.add(jtf_valor_pago, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 140, 170, -1));

        jb_imprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/locadora/image/printer.png"))); // NOI18N
        jb_imprimir.setText("Imprimir");
        jb_imprimir.setEnabled(false);
        jb_imprimir.setMaximumSize(new java.awt.Dimension(101, 33));
        jb_imprimir.setName("jb_imprimir"); // NOI18N
        jb_imprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_imprimirActionPerformed(evt);
            }
        });
        jb_imprimir.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jb_imprimirKeyPressed(evt);
            }
        });

        jb_salvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/locadora/image/ok.png"))); // NOI18N
        jb_salvar.setText("Finalizar");
        jb_salvar.setEnabled(false);
        jb_salvar.setName("jb_salvar"); // NOI18N
        jb_salvar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_salvarMouseClicked(evt);
            }
        });
        jb_salvar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jb_salvarKeyPressed(evt);
            }
        });

        jb_cancelar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/locadora/image/exit.png"))); // NOI18N
        jb_cancelar1.setText("Sair");
        jb_cancelar1.setMaximumSize(new java.awt.Dimension(101, 33));
        jb_cancelar1.setName("jb_cancelar1"); // NOI18N
        jb_cancelar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_cancelar1ActionPerformed(evt);
            }
        });
        jb_cancelar1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jb_cancelar1KeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(97, 97, 97)
                        .addComponent(jb_salvar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jb_imprimir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jb_cancelar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jb_cancelar1, jb_imprimir, jb_salvar});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jb_imprimir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jb_cancelar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jb_salvar))
                .addGap(20, 20, 20))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jb_cancelar1, jb_imprimir, jb_salvar});

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jb_imprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_imprimirActionPerformed
        imprimir();

}//GEN-LAST:event_jb_imprimirActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        jpf_senha.requestFocus();
        if (janelapaiLocacao != null) {
            action = "ENTRADA_CAIXA_LOCACAO";
            jtf_valor_total_locacao.setText(AtendimentoLocacao.jtf_valor_total_locacao.getText());
            jtf_debito_anterior.setText(AtendimentoLocacao.jtf_debito_total_locacao.getText());
            Moeda moeda = new Moeda();
            Double total_a_pagar;
            total_a_pagar = (moeda.getPrecoFormato(AtendimentoLocacao.jtf_valor_total_locacao.getText()) + moeda.getPrecoFormato(AtendimentoLocacao.jtf_debito_total_locacao.getText()));
            jtf_valor_total_a_pagar.setText(moeda.setPrecoFormat(String.valueOf(total_a_pagar)));
        }
    }//GEN-LAST:event_formWindowOpened

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        String nome_arquivo = "Imprimir/comprovanteLocacao_" + AtendimentoLocacao.dependente.getNome_dependente() + ".txt";
        File arquivo = new File(nome_arquivo);
        arquivo.deleteOnExit();
        arquivo.delete();

        retornaJanelaPai();
                        
    }//GEN-LAST:event_formWindowClosed

    private void jtf_valor_total_locacaoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_valor_total_locacaoKeyPressed

        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_valor_total_locacaoKeyPressed
    private void jtf_valor_total_locacaoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtf_valor_total_locacaoFocusGained

        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_valor_total_locacaoFocusGained

    private void jtf_valor_total_locacaoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_valor_total_locacaoKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_valor_total_locacaoKeyReleased

    private void jtf_valor_total_locacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtf_valor_total_locacaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_valor_total_locacaoActionPerformed

    private void jtf_descontoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtf_descontoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_descontoActionPerformed

    private void jtf_descontoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtf_descontoFocusGained
        jtf_desconto.selectAll();
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_descontoFocusGained

    private void jtf_descontoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_descontoKeyPressed
        acionarAtalho(evt);
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jb_salvar.requestFocus();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_descontoKeyPressed

    private void jtf_descontoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_descontoKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_descontoKeyReleased

    private void jtf_valor_pagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtf_valor_pagoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_valor_pagoActionPerformed

    private void jtf_valor_pagoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtf_valor_pagoFocusGained
        jtf_valor_pago.selectAll();
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_valor_pagoFocusGained

    private void jtf_valor_pagoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_valor_pagoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            System.out.println("Campo jtf_desconto == " + jtf_desconto.isEditable());
            moeda = new Moeda();
            if(jtf_valor_pago.getText().equals("")){
                jtf_valor_pago.setText("R$ 0,00");
            } 
            checarPagamento();
            jb_salvar.requestFocus();

        }
        acionarAtalho(evt);

        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_valor_pagoKeyPressed

    private void jtf_valor_pagoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_valor_pagoKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_valor_pagoKeyReleased

    private void jtf_trocoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtf_trocoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_trocoActionPerformed

    private void jtf_trocoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtf_trocoFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_trocoFocusGained

    private void jtf_trocoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_trocoKeyPressed
        acionarAtalho(evt);
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_trocoKeyPressed

    private void jtf_trocoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_trocoKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_trocoKeyReleased

    private void jtf_debito_anteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtf_debito_anteriorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_debito_anteriorActionPerformed

    private void jtf_debito_anteriorFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtf_debito_anteriorFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_debito_anteriorFocusGained

    private void jtf_debito_anteriorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_debito_anteriorKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_debito_anteriorKeyPressed

    private void jtf_debito_anteriorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_debito_anteriorKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_debito_anteriorKeyReleased

    private void jtf_valor_pagoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtf_valor_pagoFocusLost

        if (!jtf_valor_pago.getText().equals("")) {

            Moeda moeda = new Moeda();

            Double troco;
            Double desconto;
            Double total_locacao;
            Double valor_pago;
            Double debito_atual;
            Double valor_final;

            total_locacao = moeda.getPrecoFormato(jtf_valor_total_locacao.getText());
            desconto = moeda.getPrecoFormato(jtf_desconto.getText());
            valor_pago = moeda.getPrecoFormato(jtf_valor_pago.getText());
            debito_atual = moeda.getPrecoFormato(jtf_debito_anterior.getText());

            troco = valor_pago - ((total_locacao + debito_atual) - desconto);

            if (troco > 0) {
                jtf_troco.setText(moeda.setPrecoFormat(String.valueOf(troco)));
                jtf_debito_atual.setCaretColor(Color.black);
                jtf_debito_atual.setText("R$ 0,00");
            } else if (troco < 0) {
                jtf_troco.setText("R$ 0,00");
                jtf_debito_atual.setText(moeda.setPrecoFormat(String.valueOf(troco)));
                jtf_debito_atual.setCaretColor(Color.red);
            } else {
                jtf_troco.setText("R$ 0,00");
                jtf_debito_atual.setText("R$ 0,00");
                jtf_debito_atual.setCaretColor(Color.black);
            }
            jtf_valor_pago.setText(moeda.setPrecoFormat(String.valueOf(valor_pago)));
        } else if (jtf_valor_pago.getText().equals("")) {
            jtf_valor_pago.setText("R$ 0,00");
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_valor_pagoFocusLost

    private void jtf_loginKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_loginKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jpf_senha.requestFocus();
        }
        acionarAtalho(evt);
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_loginKeyPressed

    private void jpf_senhaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jpf_senhaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            entrar();
        }
        acionarAtalho(evt);
    }//GEN-LAST:event_jpf_senhaKeyPressed

    private void jb_logarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_logarActionPerformed
        entrar();
    }//GEN-LAST:event_jb_logarActionPerformed

    private void jtf_descontoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtf_descontoFocusLost
        Moeda moeda = new Moeda();
        if (jtf_desconto.getText().equals("")) {
            jtf_desconto.setText("R$ 0,00");
        }
        jtf_desconto.setText(moeda.setPrecoFormat(String.valueOf(jtf_desconto.getText())));

        Double troco;
        Double desconto;
        Double total_locacao;
        Double valor_pago;
        Double debito_anterior;

        total_locacao = moeda.getPrecoFormato(jtf_valor_total_locacao.getText());
        desconto = moeda.getPrecoFormato(jtf_desconto.getText());
        valor_pago = moeda.getPrecoFormato(jtf_valor_pago.getText());
        debito_anterior = moeda.getPrecoFormato(jtf_debito_anterior.getText());

        troco = valor_pago - ((total_locacao + debito_anterior) - desconto);

        if (troco > 0) {
            jtf_troco.setText(moeda.setPrecoFormat(String.valueOf(troco)));
            jtf_debito_atual.setCaretColor(Color.black);
        } else if (troco < 0) {
            jtf_troco.setText("R$ 0,00");
            troco = troco * (-1);
            jtf_debito_atual.setText(moeda.setPrecoFormat(String.valueOf(troco)));
            jtf_debito_atual.setCaretColor(Color.red);
        } else {
            jtf_troco.setText("R$ 0,00");
            jtf_debito_atual.setText("R$ 0,00");
            jtf_debito_atual.setCaretColor(Color.black);
        }
        jtf_valor_pago.setText(moeda.setPrecoFormat(String.valueOf(valor_pago)));
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_descontoFocusLost

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        acionarAtalho(evt);
        // TODO add your handling code here:
    }//GEN-LAST:event_formKeyPressed

    private void jb_cancelar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_cancelar1ActionPerformed
        String nome_arquivo = "Imprimir/comprovanteLocacao_" + AtendimentoLocacao.dependente.getNome_dependente() + ".txt";
        File arquivo = new File(nome_arquivo);
        arquivo.deleteOnExit();
        arquivo.delete();

        retornaJanelaPai();
// TODO add your handling code here:
    }//GEN-LAST:event_jb_cancelar1ActionPerformed

    private void jtf_valor_total_a_pagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtf_valor_total_a_pagarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_valor_total_a_pagarActionPerformed

    private void jtf_valor_total_a_pagarFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtf_valor_total_a_pagarFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_valor_total_a_pagarFocusGained

    private void jtf_valor_total_a_pagarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_valor_total_a_pagarKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_valor_total_a_pagarKeyPressed

    private void jtf_valor_total_a_pagarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_valor_total_a_pagarKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_valor_total_a_pagarKeyReleased

    private void jtf_debito_atualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtf_debito_atualActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_debito_atualActionPerformed

    private void jtf_debito_atualFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtf_debito_atualFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_debito_atualFocusGained

    private void jtf_debito_atualFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtf_debito_atualFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_debito_atualFocusLost

    private void jtf_debito_atualKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_debito_atualKeyPressed
        acionarAtalho(evt);
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_debito_atualKeyPressed

    private void jtf_debito_atualKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_debito_atualKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_debito_atualKeyReleased

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated

        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowActivated

    private void jb_salvarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jb_salvarKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if(jb_salvar.isEnabled()){
                finalizarCaixa();
            }
        }
        acionarAtalho(evt);
        // TODO add your handling code here:
    }//GEN-LAST:event_jb_salvarKeyPressed

    private void jb_logarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jb_logarKeyPressed
        acionarAtalho(evt);
        // TODO add your handling code here:
    }//GEN-LAST:event_jb_logarKeyPressed

    private void jb_imprimirKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jb_imprimirKeyPressed
        acionarAtalho(evt);
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jb_imprimir.doClick();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jb_imprimirKeyPressed

    private void formFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusGained

        // TODO add your handling code here:
    }//GEN-LAST:event_formFocusGained

    private void jb_cancelar1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jb_cancelar1KeyPressed
        acionarAtalho(evt);
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jb_cancelar1.doClick();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jb_cancelar1KeyPressed

    private void jpf_senhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jpf_senhaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jpf_senhaActionPerformed

    private void jb_salvarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_salvarMouseClicked
        if(evt.getClickCount() == 1){
            if(jb_salvar.isEnabled()){
                finalizarCaixa();
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jb_salvarMouseClicked

    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new EntradaCaixaLocacao().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jb_cancelar1;
    private javax.swing.JButton jb_imprimir;
    private javax.swing.JButton jb_logar;
    private javax.swing.JButton jb_salvar;
    private javax.swing.JPasswordField jpf_senha;
    public static javax.swing.JTextField jtf_debito_anterior;
    public static javax.swing.JTextField jtf_debito_atual;
    public static javax.swing.JTextField jtf_desconto;
    private javax.swing.JTextField jtf_login;
    public static javax.swing.JTextField jtf_troco;
    public static javax.swing.JTextField jtf_valor_pago;
    public static javax.swing.JTextField jtf_valor_total_a_pagar;
    public static javax.swing.JTextField jtf_valor_total_locacao;
    private javax.swing.JTextArea tfa_similar;
    // End of variables declaration//GEN-END:variables

    public void setTela(String permissao) {
        if (permissao.equals("usuario")) {
//            jb_novo.setEnabled(false);
//            jb_alterar1.setEnabled(false);
//            jb_excluir1.setEnabled(false);
        } else {
        }
    }

    public void setStatusTela(boolean status) {
        if (status) {
            this.setVisible(status);
        }
        this.setEnabled(status);
    }

    private void entrar() {

        if (validaLogin()) {
            if (verificaLogin()) {
                jtf_login.setText(acesso.getUsuario().getLogin());
                jb_salvar.setEnabled(true);
                if (acesso.getEscrever() == 0) {
                    jtf_valor_pago.setEditable(true);
                    jtf_valor_pago.setEnabled(true);
                    jtf_desconto.setEditable(true);
                    jtf_desconto.setEnabled(true);
                    jtf_valor_pago.requestFocus();
                } else {
                    jtf_desconto.setText("R$ 0,00");
                    jtf_desconto.setEditable(false);
                    jtf_desconto.setEnabled(false);
                    jtf_valor_pago.setEditable(true);
                    jtf_valor_pago.setEnabled(true);
                    jtf_valor_pago.requestFocus();
                }
                ///Faz alguma coisa interessante
            } else {
                jpf_senha.requestFocus();
                jpf_senha.setText("");
                jtf_login.setText("");
                jtf_desconto.setText("R$ 0,00");
                jtf_valor_pago.setText("R$ 0,00");
                jtf_desconto.setEditable(false);
                jtf_desconto.setEnabled(false);
                jtf_valor_pago.setEditable(false);
                jtf_valor_pago.setEnabled(false);
                jb_salvar.setEnabled(false);
            }
        }

    }

    private boolean validaLogin() {
        String msgERRO = "Preencha os campos obrigatórios:\n";

        if (jpf_senha.getPassword().equals("")) {
            msgERRO = msgERRO + " *Senha\n";
        }

        if (!msgERRO.equals("Preencha os campos obrigatórios:\n")) {
            JOptionPane.showMessageDialog(this, msgERRO);
            return false;
        } else {
            return true;
        }

    }

    public List<Usuario> usuarios;
    public static AcessoUsuario acesso;

    public boolean verificaLogin() {
        pool = new Pool();
        UsuarioDAO usuarioControl = new UsuarioDAO(pool);
        acesso = usuarioControl.verificarPermissao(jpf_senha.getText().trim(), "br.com.locadora.view.EntradaCaixa");
        try {
            //verifica a senha
            char[] senha = jpf_senha.getPassword();
            char[] senhaDoBanco = acesso.getUsuario().getSenha().toCharArray();

            // verifica o tamanho da senha
            if (senha.length != senhaDoBanco.length) {
                JOptionPane.showMessageDialog(null, "Senha incorreta");
                return false; // se for diferente, retorna falso
            } else {
                for (int i = 0; i < senha.length; i++) {
                    if (senha[i] != senhaDoBanco[i]) {
                        JOptionPane.showMessageDialog(null, "Senha incorreta");
                        return false; // se for diferente, retorna falso
                    }
                }
            }

            return true;

        } catch (Exception e) {
            System.out.println("Senha incorreta na Entrada de Caixa");
            return false;
        }

//        return true;
    }

    public void finalizarCaixa() {
        ArquivoConfiguracao conf = new ArquivoConfiguracao();

        //Envia a gravação da locação e envia o lancamento de caixa
        if (!conf.readPropertie("caixa").equals("")) {
            if (jb_logar.isEnabled() == true) {
                if (validaLogin()) {
                    if (verificaLogin()) {
                        if (janelapaiLocacao != null) {

                            itens = new ArrayList<ItemLocacao>();
                            fecharAtendimento();
                            
                            jpf_senha.setEnabled(false);
                            jb_logar.setEnabled(false);
                            jtf_valor_pago.setEnabled(false);
                            jtf_desconto.setEnabled(false);
                            jb_salvar.setEnabled(false);
                            jb_imprimir.setEnabled(true);
                            jb_imprimir.requestFocus();

                            DefaultTableModel tb_locacao = (DefaultTableModel) AtendimentoLocacao.jtbl_locacao.getModel();
                            int rows = tb_locacao.getRowCount();
                            for (int i = rows - 1; i >= 0; i--) {
                                tb_locacao.removeRow(i);
                            }
                            AtendimentoLocacao.jtf_codigo_cliente.setText("");
                            AtendimentoLocacao.jtf_nome_cliente.setText("");

                            AtendimentoLocacao.jtf_valor_total_locacao.setText("R$ 0,00");
                            AtendimentoLocacao.jtf_debito_total_locacao.setText("R$ 0,00");
                        }
                    }
                }
            } else {
                JOptionPane.showMessageDialog(null, "Atendimento finalizado");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Caixa padrão não definido. Favor verificar");
        }
    }

    public void acionarAtalho(java.awt.event.KeyEvent evt) {

        if (evt.getKeyCode() == KeyEvent.VK_F10) {
            finalizarCaixa();
        }
        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {

            String nome_arquivo = "Imprimir/comprovanteLocacao_" + AtendimentoLocacao.dependente.getNome_dependente() + ".txt";
            File arquivo = new File(nome_arquivo);
            arquivo.deleteOnExit();
            arquivo.delete();

            retornaJanelaPai();
        }
    }

    public void imprimir() {
        try {
            //Pegar usuario logado na tela do caixa
            Usuario usuario = acesso.getUsuario();
            Printer imprimir = new Printer();
            imprimir.comprovanteLocacao(itens, AtendimentoLocacao.dependente, usuario);
            String nome_arquivo = "Imprimir/comprovanteLocacao_" + AtendimentoLocacao.dependente.getNome_dependente() + ".txt";
            if (imprimir.imprimirArquivo(nome_arquivo)) {
                //Desabilita para não haver mais alteração
                jtf_valor_pago.setEditable(false);
                jtf_desconto.setEditable(false);

                retornaJanelaPai();

                File arquivo = new File(nome_arquivo);
                arquivo.deleteOnExit();
                arquivo.delete();
            }

        } catch (PrintException e) {
            JOptionPane.showMessageDialog(null, "Problema encontrado com impressora padrão.");
        }
    }
    List<Diaria> promocoes;

    public void checarPagamento() {
        pool = new Pool();
        Double valor_pagamento_a_vista = 0.0;
        DiariaDAO diDAO = new DiariaDAO(pool);

        for (int j = 0; j < janelapaiLocacao.copiasLocacao.size(); j++) {
            if(janelapaiLocacao.copiasLocacao.get(j).getObjeto().getDiaria().getPromocaoLocacao().getPagamento_a_vista() == true){
                valor_pagamento_a_vista = valor_pagamento_a_vista + janelapaiLocacao.copiasLocacao.get(j).getObjeto().getDiaria().getPromocaoLocacao().getValor_promocao_locacao();
                break;                
            }            
        }
        Double valor_pago;
        Moeda moeda = new Moeda();
        valor_pago = moeda.getPrecoFormato(moeda.setPrecoFormat(jtf_valor_pago.getText()));
        
        System.out.println("Valor para pagamento a vista: "+ valor_pagamento_a_vista);
        System.out.println("Valor pago: "+ valor_pago);
        
        if (valor_pagamento_a_vista <= valor_pago) {
            for (int j = 0; j < AtendimentoLocacao.copiasLocacao.size(); j++) {
                promocoes = diDAO.getDiariaPromocao(AtendimentoLocacao.copiasLocacao.get(j).getObjeto().getDiaria());
                for (int x = 0; x < promocoes.size(); x++) {
                    if (janelapaiLocacao.copiasLocacao.get(j).getObjeto().getDiaria().getPromocaoLocacao().getCodigo_promocao_locacao() == promocoes.get(x).getPromocaoLocacao().getCodigo_promocao_locacao()) {
                        if (promocoes.get(x).getPromocaoLocacao().getPagamento_a_vista() == true) {
                            valor_pagamento_a_vista = valor_pagamento_a_vista + promocoes.get(x).getPromocaoLocacao().getValor_promocao_locacao();
                            if (valor_pago >= promocoes.get(x).getPromocaoLocacao().getValor_promocao_locacao()) {
                                valor_pago = valor_pago - promocoes.get(x).getPromocaoLocacao().getValor_promocao_locacao();
                                break;
                            } else if( valor_pago < promocoes.get(x).getPromocaoLocacao().getValor_promocao_locacao()){
                                int selectedOption = JOptionPane.showConfirmDialog(this, "Autorizar promoção sem pagamento?", "Atenção", JOptionPane.YES_NO_OPTION);
                                if (selectedOption == JOptionPane.YES_NO_OPTION) {
//                                    AtendimentoLocacao.jtbl_locacao.setValueAt(moeda.setPrecoFormat(String.valueOf(promocoes.get(x).getPromocao().getValor_promocao())), j, 2);
//                                    AtendimentoLocacao.jtbl_locacao.setValueAt("", j, 5);                                    
                                } else {
                                    AtendimentoLocacao.jtbl_locacao.setValueAt(moeda.setPrecoFormat(String.valueOf(AtendimentoLocacao.copiasLocacao.get(x).getObjeto().getDiaria().getValor())), j, 2);
                                    AtendimentoLocacao.jtbl_locacao.setValueAt("", j, 5);                                    
                                }
                                break;
                            }
                        }
                    }
                }
                
            }
        }
    }

    
    public void fecharAtendimento() {
        
        try {
            LocacaoDAO locacaoDAO;
            Dependente dependente = new Dependente();
            Cliente cliente = new Cliente();
            Usuario usuario = new Usuario();
            Locacao locacao = new Locacao();

            //Dependente que esta locando o filme
            dependente.setCodigo_dependente(janelapaiLocacao.dependente.getCodigo_dependente());
            //Cliente titular
            cliente.setCodigo_cliente(Integer.parseInt(janelapaiLocacao.jtf_codigo_cliente.getText()));

            locacao.setCliente(cliente);
            locacao.setDependente(dependente);
            usuario.setCodigo_usuario(acesso.getUsuario().getCodigo_usuario());
            locacao.setUsuario(usuario);

            Double valor_pago;
            Double troco;
            Double valor_desconto;
            Moeda moeda = new Moeda();

            valor_pago = moeda.getPrecoFormato(jtf_valor_pago.getText());
            valor_desconto = moeda.getPrecoFormato(jtf_desconto.getText());
            troco = moeda.getPrecoFormato(jtf_troco.getText());

            valor_pago = valor_pago - troco;
            Lancamento lancamento = new Lancamento();
            lancamento.setUsuario(usuario);
            lancamento.setDependente(dependente);
            TipoServico tipoServico = new TipoServico();

            ArquivoConfiguracao conf = new ArquivoConfiguracao();

            //Envia a gravação da locação e envia o lancamento de caixa
            pool = new Pool();
            locacaoDAO = new LocacaoDAO(pool);
            locacao = locacaoDAO.salvar(locacao);
            lancamento.setLocacao(locacao);
            lancamento.setCaixa(Integer.parseInt(conf.readPropertie("caixa")));

            //Lançamento de crédito e de débito
            if (valor_pago > 0) {
                //Lançamento de débito primeiro
                tipoServico.setCodigo_tipo_servico(1);
                lancamento.setValor(moeda.getPrecoFormato(EntradaCaixaLocacao.jtf_valor_total_locacao.getText()));

                lancamento.setTipoServico(tipoServico);
                locacaoDAO.salvarLancamento(lancamento);
                //Lançamento de crédito
                tipoServico.setCodigo_tipo_servico(6);
                lancamento.setValor(valor_pago);

                lancamento.setTipoServico(tipoServico);
                locacaoDAO.salvarLancamento(lancamento);

            } else {
                tipoServico.setCodigo_tipo_servico(1);
                lancamento.setValor(moeda.getPrecoFormato(EntradaCaixaLocacao.jtf_valor_total_locacao.getText()));

                lancamento.setTipoServico(tipoServico);
                locacaoDAO.salvarLancamento(lancamento);
            }

            if (valor_desconto > 0) {
                //Lançamento de crédito como desconto
                tipoServico.setCodigo_tipo_servico(3);
                lancamento.setValor(valor_desconto);

                lancamento.setTipoServico(tipoServico);
                locacaoDAO.salvarLancamento(lancamento);
            }

            List<ItemLocacao> itens = new ArrayList();
            List<Diaria> dias = new ArrayList<Diaria>();
            pool = new Pool();
            DiariaDAO diaDAO = new DiariaDAO(pool);
            dias = diaDAO.getTodasDiarias();
            for (int i = 0; i < janelapaiLocacao.jtbl_locacao.getRowCount(); i++) {
                System.out.println("Inciar Verificação: "+ janelapaiLocacao.copiasLocacao.get(i).getObjeto().getTitulo());
                System.out.println("Acumulativo: "+janelapaiLocacao.copiasLocacao.get(i).getObjeto().getDiaria().getAcumulativo());
                if (janelapaiLocacao.copiasLocacao.get(i).getObjeto().getDiaria().getAcumulativo() == true) {
                    for (int j = 0; j < dias.size(); j++) {
                        if (dias.size() > 0) {
                            System.out.println("CODIGO DIARIA - DIARIA: "+dias.get(j).getCodigo_diaria()+ " CODIGO DIARIA - COPIA: "+janelapaiLocacao.copiasLocacao.get(i).getObjeto().getDiaria().getCodigo_diaria());
                            if (dias.get(j).getCodigo_diaria() == janelapaiLocacao.copiasLocacao.get(i).getObjeto().getDiaria().getCodigo_diaria()) {

                                if ((dias.get(j).getQuantidade_filme() * AtendimentoLocacao.copiasLocacao.get(i).getObjeto().getDiaria().getDias()) < janelapaiLocacao.copiasLocacao.get(i).getObjeto().getDiaria().getMaximo_dias()) {
                                    dias.get(j).setQuantidade_filme(dias.get(j).getQuantidade_filme() + 1);
                                    dias.get(j).setDias_previsto(dias.get(j).getDias_previsto() + 1);
                                    System.out.println("Quantidade de filme: " + dias.get(j).getQuantidade_filme() + " Dias Previsto: " + dias.get(j).getDias_previsto());
                                } else {
                                    dias.get(j).setQuantidade_filme(dias.get(j).getQuantidade_filme() + 1);
                                    System.out.println("Quantidade de filme: " + dias.get(j).getQuantidade_filme() + " Dias Previsto: " + dias.get(j).getDias_previsto());
                                }

                            }
                        } 
                    }
                }
            }

            for (int i = 0; i < janelapaiLocacao.jtbl_locacao.getRowCount(); i++) {
                ItemLocacao itemLocacao = new ItemLocacao();
                Objeto objeto = new Objeto();
                objeto.setCodigo_objeto(janelapaiLocacao.copiasLocacao.get(i).getObjeto().getCodigo_objeto());
                objeto.setTitulo(janelapaiLocacao.copiasLocacao.get(i).getObjeto().getTitulo());

                Diaria diaria = new Diaria();
                diaria.setValor(janelapaiLocacao.copiasLocacao.get(i).getObjeto().getDiaria().getValor());

                objeto.setDiaria(diaria);

                Copia copia = new Copia();
                copia.setObjeto(objeto);
                copia.setCodigo_copia(janelapaiLocacao.copiasLocacao.get(i).getCodigo_copia());
                copia.setStatus("1");

                itemLocacao.setValor_locado(janelapaiLocacao.copiasLocacao.get(i).getObjeto().getDiaria().getValor());
                if (valor_pago > 0) {
                    if (valor_pago < itemLocacao.getValor_locado()) {
                        itemLocacao.setValor_pago(valor_pago);
                    } else {
                        itemLocacao.setValor_pago(itemLocacao.getValor_locado());
                        valor_pago = valor_pago - itemLocacao.getValor_locado();
                    }
                } else {
                    itemLocacao.setValor_pago(0.00);
                }
                itemLocacao.setLocacao(locacao);
                itemLocacao.setCopia(copia);

                //Inserir a lógica da promoção de objetos e para cada um sera gravada  a data prevista de devolucao no banco e somar
                //conforme quantidade e regra de negócio
                Calendar cal = Calendar.getInstance();
                
                for (int d = 0; d < dias.size(); d++) {
                    if (dias.get(d).getCodigo_diaria() == janelapaiLocacao.copiasLocacao.get(i).getObjeto().getDiaria().getCodigo_diaria()) {
                        cal.set(Calendar.DAY_OF_MONTH, cal.get(Calendar.DAY_OF_MONTH) + dias.get(d).getDias_previsto());
//                        data.setDate(data.getDate() + dias.get(d).getDias_previsto());
                        System.out.println("Dias: " + dias.get(d).getDias_previsto());
                        System.out.println("Day Month: " + cal.get(Calendar.DAY_OF_MONTH));
                        System.out.println("Data prevista: " + cal.getTime());
                    }
                }

                itemLocacao.setData_prevista(cal.getTime());
                itens.add(itemLocacao);
                pool = new Pool();
                CopiaDAO copiaDAO = new CopiaDAO(pool);
                copiaDAO.alterarStatusFilme(copia);
            }
            EntradaCaixaLocacao.itens = itens;
            pool = new Pool();
            
            locacaoDAO = new LocacaoDAO(pool);
            locacaoDAO.salvarItem(itens);

        } catch (SQLException e) {
            System.out.println(e.getMessage() + "Problemas com a gravação: ");

            e.printStackTrace();
        } catch (NumberFormatException e) {
            System.out.println("Valor inválido: " + e.getMessage());

            e.printStackTrace();
        }        
    }
    
    public void retornaJanelaPai(){
        this.setVisible(false);
        if(janelapaiLocacao != null){
            janelapaiLocacao.setStatusTela(true);
            janelapaiLocacao.jtf_nome_cliente.requestFocus();
        }
    }
}
